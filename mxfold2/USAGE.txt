================================================================================
RNA 二级结构预测工具集 - 命令行使用参考手册
================================================================================

版本: 1.0
日期: 2025-10-23
位置: preprocessing/rna_structure_predictor/

================================================================================
目录
================================================================================

1. 脚本概览
2. predict_structure.py 详细用法
3. mxfold2_predict.py 详细用法
4. batch_predict.py 详细用法
5. 常用命令速查
6. 参数说明
7. 实例集锦

================================================================================
1. 脚本概览
================================================================================

本工具集包含 3 个 Python 脚本：

[1] predict_structure.py  ⭐ 推荐主脚本
    - 功能增强的 RNA 二级结构预测
    - 支持 Nussinov 和 Nussinov-Energy 算法
    - 自动编码检测，参数可配置

[2] mxfold2_predict.py
    - 简化版 RNA 二级结构预测
    - 向后兼容原 mxfold2_stub
    - 基础 Nussinov 算法

[3] batch_predict.py
    - 批量处理多个 FASTA 文件
    - 自动文件发现和错误处理
    - 进度显示和统计报告

================================================================================
2. predict_structure.py 详细用法
================================================================================

--------------------------------------------------------------------------------
2.1 基本语法
--------------------------------------------------------------------------------

python predict_structure.py predict <输入文件.fa> [选项]

--------------------------------------------------------------------------------
2.2 主要选项
--------------------------------------------------------------------------------

位置参数:
  predict               命令（必需）
  input                 输入 FASTA 文件路径

可选参数:
  -h, --help            显示帮助信息
  -o, --output FILE     输出文件路径（默认：标准输出）
  -a, --algorithm ALG   算法选择（nussinov 或 nussinov-energy，默认：nussinov-energy）
  -m, --min-loop-length N  最小环长度（默认：3）
  --au-penalty FLOAT    AU 碱基对能量惩罚（默认：0.5，仅用于 nussinov-energy）
  -v, --verbose         详细输出模式

--------------------------------------------------------------------------------
2.3 使用示例
--------------------------------------------------------------------------------

# 基本使用（输出到屏幕）
python predict_structure.py predict input.fa

# 保存到文件
python predict_structure.py predict input.fa -o output.txt

# 使用 Nussinov 算法（快速）
python predict_structure.py predict input.fa --algorithm nussinov

# 使用 Nussinov-Energy 算法（默认，推荐）
python predict_structure.py predict input.fa --algorithm nussinov-energy

# 详细输出模式
python predict_structure.py predict input.fa -v

# 保存到文件并显示详细信息
python predict_structure.py predict input.fa -o result.txt -v

# 调整最小环长度
python predict_structure.py predict input.fa --min-loop-length 4

# 调整 AU 惩罚参数
python predict_structure.py predict input.fa --au-penalty 0.7

# 组合多个参数
python predict_structure.py predict input.fa -o output.txt --algorithm nussinov-energy --min-loop-length 4 --au-penalty 0.8 -v

# 使用相对路径
python predict_structure.py predict ..\Aptazyme\seq.fa -o ..\Aptazyme\result.txt

# 使用绝对路径
python predict_structure.py predict "D:\data\rna_sequences.fa" -o "D:\results\structures.txt"

--------------------------------------------------------------------------------
2.4 算法选择指南
--------------------------------------------------------------------------------

nussinov:
  - 速度：很快
  - 准确度：中等
  - 适用：快速预览、大批量处理
  - 特点：最大化碱基对数量

nussinov-energy (推荐):
  - 速度：快
  - 准确度：较高
  - 适用：一般分析、重要结果
  - 特点：考虑能量模型

================================================================================
3. mxfold2_predict.py 详细用法
================================================================================

--------------------------------------------------------------------------------
3.1 基本语法
--------------------------------------------------------------------------------

python mxfold2_predict.py predict <输入文件.fa>

--------------------------------------------------------------------------------
3.2 选项
--------------------------------------------------------------------------------

位置参数:
  predict               命令（必需）
  input                 输入 FASTA 文件路径

可选参数:
  -h, --help            显示帮助信息

注意：此脚本输出到标准输出，需使用重定向保存到文件。

--------------------------------------------------------------------------------
3.3 使用示例
--------------------------------------------------------------------------------

# 输出到屏幕
python mxfold2_predict.py predict input.fa

# 保存到文件（使用重定向）
python mxfold2_predict.py predict input.fa > output.txt

# 使用相对路径
python mxfold2_predict.py predict ..\tRNA\sequences.fa > ..\tRNA\structures.txt

# 使用绝对路径
python mxfold2_predict.py predict "D:\data\test.fa" > "D:\results\output.txt"

--------------------------------------------------------------------------------
3.4 与 predict_structure.py 的对比
--------------------------------------------------------------------------------

相同点：
  - 输入输出格式相同
  - 都使用 Nussinov 算法
  - 支持 FASTA 格式

不同点：
  mxfold2_predict.py           predict_structure.py
  - 固定算法                   - 两种算法可选
  - 无参数配置                 - 参数可配置
  - 输出到 stdout              - 可输出到文件
  - 无详细日志                 - 有详细模式
  - 轻量简单                   - 功能完整

================================================================================
4. batch_predict.py 详细用法
================================================================================

--------------------------------------------------------------------------------
4.1 基本语法
--------------------------------------------------------------------------------

python batch_predict.py <输入目录> <输出目录> [选项]

--------------------------------------------------------------------------------
4.2 主要选项
--------------------------------------------------------------------------------

位置参数:
  input_dir             输入目录（包含 FASTA 文件）
  output_dir            输出目录（存放预测结果）

可选参数:
  -h, --help            显示帮助信息
  -p, --pattern PATTERN 文件匹配模式（默认：*.fa）
  -a, --algorithm ALG   算法选择（默认：nussinov-energy）
  -m, --min-loop-length N  最小环长度（默认：3）
  --au-penalty FLOAT    AU 碱基对惩罚（默认：0.5）
  --numbered-output     使用编号输出文件名而非原文件名
  -v, --verbose         详细输出模式

--------------------------------------------------------------------------------
4.3 使用示例
--------------------------------------------------------------------------------

# 基本批量处理（处理所有 .fa 文件）
python batch_predict.py input_folder\ output_folder\

# 详细输出模式
python batch_predict.py input_folder\ output_folder\ -v

# 处理 .fasta 文件
python batch_predict.py data\ results\ --pattern "*.fasta"

# 处理 .fna 文件
python batch_predict.py sequences\ structures\ --pattern "*.fna" -v

# 使用 Nussinov 算法批量处理
python batch_predict.py input\ output\ --algorithm nussinov -v

# 使用 Nussinov-Energy 算法（默认）
python batch_predict.py input\ output\ --algorithm nussinov-energy

# 调整参数批量处理
python batch_predict.py input\ output\ --min-loop-length 4 --au-penalty 0.8 -v

# 使用编号输出文件名
python batch_predict.py input\ output\ --numbered-output -v

# 完整示例（所有参数）
python batch_predict.py data_folder\ result_folder\ --pattern "*.fa" --algorithm nussinov-energy --min-loop-length 3 --au-penalty 0.5 -v

# 处理 Aptazyme 数据
python batch_predict.py ..\Aptazyme\ ..\Aptazyme\results\ -v

# 使用绝对路径
python batch_predict.py "D:\sequences" "D:\results" --pattern "*.fasta" -v

--------------------------------------------------------------------------------
4.4 输出文件命名
--------------------------------------------------------------------------------

默认模式（保持原文件名）:
  输入: seq1.fa, seq2.fa
  输出: seq1_structure.txt, seq2_structure.txt

编号模式（--numbered-output）:
  输入: seq1.fa, seq2.fa
  输出: result_0001.txt, result_0002.txt

================================================================================
5. 常用命令速查
================================================================================

--------------------------------------------------------------------------------
5.1 快速测试
--------------------------------------------------------------------------------

# 测试 predict_structure.py
python predict_structure.py predict example.fa

# 测试 mxfold2_predict.py
python mxfold2_predict.py predict test.fa

# 测试批量处理（需要先创建目录）
mkdir test_input test_output
copy example.fa test_input\
python batch_predict.py test_input\ test_output\ -v

--------------------------------------------------------------------------------
5.2 日常使用
--------------------------------------------------------------------------------

# 单个文件预测（推荐方式）
python predict_structure.py predict input.fa -o output.txt -v

# 单个文件预测（简化版）
python mxfold2_predict.py predict input.fa > output.txt

# 批量处理
python batch_predict.py input_dir\ output_dir\ -v

--------------------------------------------------------------------------------
5.3 高级使用
--------------------------------------------------------------------------------

# 快速预览（使用快速算法）
python predict_structure.py predict input.fa --algorithm nussinov

# 高精度预测（调整参数）
python predict_structure.py predict input.fa --algorithm nussinov-energy --min-loop-length 4 --au-penalty 0.8 -o output.txt -v

# 大批量快速处理
python batch_predict.py large_dataset\ results\ --algorithm nussinov -v

# 高精度批量处理
python batch_predict.py dataset\ results\ --algorithm nussinov-energy --min-loop-length 4 -v

--------------------------------------------------------------------------------
5.4 特殊场景
--------------------------------------------------------------------------------

# 处理编码问题文件（自动检测）
python predict_structure.py predict problematic.fa -o output.txt -v

# 处理不同扩展名文件
python batch_predict.py data\ results\ --pattern "*.fasta" -v

# 只查看帮助信息
python predict_structure.py -h
python batch_predict.py -h
python mxfold2_predict.py -h

================================================================================
6. 参数说明
================================================================================

--------------------------------------------------------------------------------
6.1 algorithm (算法)
--------------------------------------------------------------------------------

可选值:
  - nussinov          快速算法，最大化碱基对
  - nussinov-energy   能量算法，考虑热力学稳定性（推荐）

默认值: nussinov-energy

何时使用:
  - 快速预览/大批量        → nussinov
  - 一般分析/重要结果      → nussinov-energy

--------------------------------------------------------------------------------
6.2 min-loop-length (最小环长度)
--------------------------------------------------------------------------------

类型: 整数
默认值: 3
范围: 1-10（推荐 3-5）

含义: 发夹环中最少的未配对碱基数

调整建议:
  - 增加 (4-5): 更保守，减少假阳性，更符合生物学
  - 减少 (1-2): 更灵活，可能增加假阳性
  - 保持默认 (3): 一般情况下的平衡选择

--------------------------------------------------------------------------------
6.3 au-penalty (AU 碱基对惩罚)
--------------------------------------------------------------------------------

类型: 浮点数
默认值: 0.5
范围: 0.0-2.0（推荐 0.3-0.8）

含义: AU 碱基对在螺旋末端的能量惩罚

仅用于: nussinov-energy 算法

调整建议:
  - 增加 (0.7-1.0): 更保守，减少 AU 末端配对
  - 减少 (0.2-0.4): 更灵活，允许更多 AU 末端
  - 保持默认 (0.5): 标准热力学参数

--------------------------------------------------------------------------------
6.4 pattern (文件匹配模式)
--------------------------------------------------------------------------------

仅用于: batch_predict.py

常用模式:
  - "*.fa"        匹配所有 .fa 文件（默认）
  - "*.fasta"     匹配所有 .fasta 文件
  - "*.fna"       匹配所有 .fna 文件
  - "seq*.fa"     匹配以 seq 开头的 .fa 文件

注意: 需要用引号包裹模式

--------------------------------------------------------------------------------
6.5 verbose (详细模式)
--------------------------------------------------------------------------------

类型: 标志（无需参数值）
默认值: 关闭

启用时输出:
  - 读取的序列数量
  - 当前处理进度
  - 算法选择信息
  - 编码检测信息
  - 警告和错误详情

建议使用场景:
  - 调试问题
  - 首次使用
  - 批量处理
  - 编码问题

================================================================================
7. 实例集锦
================================================================================

--------------------------------------------------------------------------------
7.1 基础操作
--------------------------------------------------------------------------------

[示例 1] 最简单使用
python predict_structure.py predict input.fa

[示例 2] 保存到文件
python predict_structure.py predict input.fa -o output.txt

[示例 3] 详细输出
python predict_structure.py predict input.fa -v

[示例 4] 简化版使用
python mxfold2_predict.py predict input.fa > output.txt

--------------------------------------------------------------------------------
7.2 算法选择
--------------------------------------------------------------------------------

[示例 5] 使用快速算法
python predict_structure.py predict input.fa --algorithm nussinov -o output.txt

[示例 6] 使用能量算法（默认）
python predict_structure.py predict input.fa --algorithm nussinov-energy -o output.txt

[示例 7] 对比两种算法
python predict_structure.py predict input.fa --algorithm nussinov -o nussinov_result.txt
python predict_structure.py predict input.fa --algorithm nussinov-energy -o energy_result.txt

--------------------------------------------------------------------------------
7.3 参数调整
--------------------------------------------------------------------------------

[示例 8] 调整最小环长度
python predict_structure.py predict input.fa --min-loop-length 4 -o output.txt

[示例 9] 调整 AU 惩罚
python predict_structure.py predict input.fa --au-penalty 0.7 -o output.txt

[示例 10] 组合参数
python predict_structure.py predict input.fa --algorithm nussinov-energy --min-loop-length 4 --au-penalty 0.8 -o output.txt -v

--------------------------------------------------------------------------------
7.4 批量处理
--------------------------------------------------------------------------------

[示例 11] 基本批量处理
python batch_predict.py input_folder\ output_folder\

[示例 12] 详细批量处理
python batch_predict.py input_folder\ output_folder\ -v

[示例 13] 处理特定文件类型
python batch_predict.py data\ results\ --pattern "*.fasta" -v

[示例 14] 快速批量处理
python batch_predict.py large_data\ results\ --algorithm nussinov -v

[示例 15] 编号输出
python batch_predict.py input\ output\ --numbered-output -v

--------------------------------------------------------------------------------
7.5 实际项目使用
--------------------------------------------------------------------------------

[示例 16] 处理 Aptazyme 数据
cd preprocessing\rna_structure_predictor
python predict_structure.py predict ..\Aptazyme\seq.fa -o ..\Aptazyme\ss_predicted.txt -v

[示例 17] 批量处理 tRNA 数据
python batch_predict.py ..\tRNA\ ..\tRNA\structures\ --algorithm nussinov-energy -v

[示例 18] 处理 RfamSeed 数据
python batch_predict.py ..\RfamSeed\rfam_out\ ..\RfamSeed\structures\ --pattern "*.stk" -v

[示例 19] 替代 mxfold2（向后兼容）
# 旧命令
# mxfold2 predict input.fa > output.txt

# 新命令（相同效果）
python mxfold2_predict.py predict input.fa > output.txt

# 或使用增强版
python predict_structure.py predict input.fa -o output.txt

--------------------------------------------------------------------------------
7.6 疑难解决
--------------------------------------------------------------------------------

[示例 20] 处理编码问题文件
python predict_structure.py predict problematic_file.fa -o output.txt -v

[示例 21] 测试脚本是否正常
python predict_structure.py predict example.fa
python mxfold2_predict.py predict test.fa

[示例 22] 查看帮助信息
python predict_structure.py -h
python batch_predict.py -h
python mxfold2_predict.py -h

[示例 23] 处理长路径文件名
python predict_structure.py predict "D:\long path with spaces\input file.fa" -o "D:\output\result.txt" -v

[示例 24] PowerShell 批量处理
Get-ChildItem *.fa | ForEach-Object {
    python predict_structure.py predict $_.Name -o ($_.BaseName + "_structure.txt")
}

================================================================================
附录
================================================================================

A. 输入格式（FASTA）
-------------------
>sequence_id
GCGGAUUUAGCUCAGUUGGGAGAGC

B. 输出格式（点括号记号）
-------------------------
>sequence_id
GCGGAUUUAGCUCAGUUGGGAGAGC
(((((((.((((......)))).))).

符号说明:
  . = 未配对碱基
  ( = 左配对碱基
  ) = 右配对碱基

C. 支持的文件扩展名
-------------------
.fa, .fasta, .fna (FASTA 格式)

D. 获取更多帮助
---------------
- 完整文档: 查看 README.md
- 在线帮助: python <script>.py -h
- 示例文件: example.fa, test.fa

================================================================================
版权信息
================================================================================

维护者: RNAgg 项目
版本: 1.0
日期: 2025-10-23
状态: 生产就绪

================================================================================
